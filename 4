repeat task.wait() until game:GetService("Players").LocalPlayer
print("Vicious Bee FINDER - Searcher Accounts")

local httpService = game:GetService("HttpService")
local teleportService = game:GetService("TeleportService")
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local placeID = game.PlaceId

-- ‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ê GITHUB GIST ‚öôÔ∏è
local GIST_ID = "e249080d086a3bbfb71769c9c545dd75"
local GITHUB_TOKEN = "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" -- –¢–í–û–ô –¢–û–ö–ï–ù

_G.Max = 31
_G.Min = 1

-- üî¢ –†–£–ß–ù–ê–Ø –ù–£–ú–ï–†–ê–¶–ò–Ø! –ú–ï–ù–Ø–ô –î–õ–Ø –ö–ê–ñ–î–û–ì–û –ê–ö–ö–ê–£–ù–¢–ê!
local ACCOUNT_NUMBER = 4 -- üîÑ –ü–û–°–¢–ê–í–¨: 1, 2, 3, 4
print("üîç Searcher Account "..ACCOUNT_NUMBER.." - Bee Finder")

local isTeleporting = false
local visitedServers = {}
local lastHopTime = 0
local HOP_DELAY = 10

-- –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Gist
local function sendGistUpdate(bee)
    local level = tonumber(bee.Name:match("%d+")) or "?"
    local beeRoot = bee:FindFirstChild("HumanoidRootPart")
    local position = beeRoot and ("X: "..math.floor(beeRoot.Position.X)..", Z: "..math.floor(beeRoot.Position.Z)) or "Unknown"
    
    local content = string.format(
        "**Vicious Bee Found!**\nField: %s\nLevel: %s\nPosition: %s\nPlayers: %d\nServer ID: %s\nTime: %s",
        "Auto-Detected",
        tostring(level),
        position,
        #players:GetPlayers(),
        game.JobId,
        os.date("%Y-%m-%d %H:%M:%S")
    )

    local payload = httpService:JSONEncode({
        files = { ["bee_alert.txt"] = { content = content } }
    })

    pcall(function()
        httpService:RequestAsync({
            Url = "https://api.github.com/gists/" .. GIST_ID,
            Method = "PATCH",
            Headers = {
                ["Authorization"] = "token " .. GITHUB_TOKEN,
                ["Content-Type"] = "application/json"
            },
            Body = payload
        })
        print("‚úÖ Gist updated by Searcher "..ACCOUNT_NUMBER.."! Bee Level: " .. level)
    end)
end

-- –ü–æ–∏—Å–∫ Vicious Bee
local function checkLevel(str)
    local level = tonumber(str:match("%d+"))
    return level and level >= _G.Min and level <= _G.Max
end

local function findViciousBee()
    local monstersFolder = game:GetService("Workspace"):FindFirstChild("Monsters")
    if not monstersFolder then return nil end
    for _, child in ipairs(monstersFolder:GetChildren()) do
        if child:IsA("Model") and child.Name:find("Vicious Bee") and checkLevel(child.Name) then
            return child
        end
    end
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ú –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï–ú
local function getServerForThisAccount()
    local success, result = pcall(function()
        local response = game:HttpGet('https://games.roblox.com/v1/games/' .. placeID .. '/servers/Public?sortOrder=Asc&limit=100')
        local data = httpService:JSONDecode(response)
        
        local servers = {}
        for _, server in ipairs(data.data) do
            if tostring(server.id) ~= game.JobId and server.playing < server.maxPlayers then
                table.insert(servers, tostring(server.id))
            end
        end
        
        if #servers == 0 then return nil end
        
        -- üî• –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï
        -- –ö–∞–∂–¥—ã–π –∞–∫–∫–∞—É–Ω—Ç –±–µ—Ä–µ—Ç —Å–µ—Ä–≤–µ—Ä —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Å–º–µ—â–µ–Ω–∏–µ–º
        local startIndex = ((ACCOUNT_NUMBER - 1) * 5) + 1 -- –ê–∫–∫–∞—É–Ω—Ç 1: 1, –ê–∫–∫–∞—É–Ω—Ç 2: 6, –ê–∫–∫–∞—É–Ω—Ç 3: 11, –ê–∫–∫–∞—É–Ω—Ç 4: 16
        local selectedIndex = startIndex
        
        -- –ï—Å–ª–∏ –≤—ã—à–ª–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —Å–ø–∏—Å–∫–∞, –Ω–∞—á–∏–Ω–∞–µ–º —Å–Ω–∞—á–∞–ª–∞
        while selectedIndex > #servers do
            selectedIndex = selectedIndex - #servers
        end
        
        local selectedServer = servers[selectedIndex]
        print("üéØ Account "..ACCOUNT_NUMBER.." taking server "..selectedIndex.." of "..#servers.." | Server: "..selectedServer:sub(1, 8))
        
        return selectedServer
    end)
    
    return success and result or nil
end

-- –§—É–Ω–∫—Ü–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ö–æ–ø–∞
local function guaranteedHop()
    if isTeleporting then return false end

    isTeleporting = true
    
    print("üîÑ Searcher "..ACCOUNT_NUMBER.." forced hopping...")

    local success, errorMsg = pcall(function()
        queue_on_teleport([[
            wait(3)
            repeat task.wait() until game:IsLoaded() and game:GetService("Players").LocalPlayer
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Chris12089/atlasbss/main/SEARCHER_script.lua"))()
        ]])
        
        wait(1)
        teleportService:Teleport(placeID)
    end)

    if not success then
        print("‚ùå Teleport failed: " .. tostring(errorMsg))
        isTeleporting = false
        return false
    end
    
    return true
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
local function joinServer(serverId)
    if isTeleporting or serverId == game.JobId then
        return false
    end

    isTeleporting = true
    visitedServers[serverId] = true
    lastHopTime = tick()
    
    print("üöÄ Searcher "..ACCOUNT_NUMBER.." hopping to: " .. serverId)

    local success, errorMsg = pcall(function()
        queue_on_teleport([[
            wait(3)
            repeat task.wait() until game:IsLoaded() and game:GetService("Players").LocalPlayer
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Chris12089/atlasbss/main/SEARCHER_script.lua"))()
        ]])
        
        wait(1)
        teleportService:TeleportToPlaceInstance(placeID, serverId, localPlayer)
    end)

    if not success then
        print("‚ùå Teleport failed: " .. tostring(errorMsg))
        isTeleporting = false
        return false
    end
    
    return true
end

-- GUI —Å—Ç–∞—Ç—É—Å–∞
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SearcherGUI"
screenGui.Parent = localPlayer.PlayerGui

local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(0, 350, 0, 120)
statusLabel.Position = UDim2.new(0, 10, 0, 10)
statusLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
statusLabel.BackgroundTransparency = 0.5
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.TextSize = 14
statusLabel.TextWrapped = true
statusLabel.Font = Enum.Font.Gotham
statusLabel.Text = "üîç Searcher "..ACCOUNT_NUMBER.." - Starting..."
statusLabel.Parent = screenGui

-- –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è –°–ï–†–ß–ï–†–û–í
while true do
    if not isTeleporting then
        local currentServerId = game.JobId
        
        -- –ü–æ–∏—Å–∫ –≤–∏—Ü–∏–æ—Å–∞
        local targetBee = findViciousBee()
        
        if targetBee then
            -- –ù–∞—à–ª–∏ –≤–∏—Ü–∏–æ—Å–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Gist
            statusLabel.Text = "üéØ Searcher "..ACCOUNT_NUMBER.."\nBee Found! Level "..(targetBee.Name:match("%d+") or "?").."\nüì° Sending to Gist...\nServer: "..currentServerId:sub(1, 8)
            
            if not targetBee:GetAttribute("GistSent") then
                targetBee:SetAttribute("GistSent", true)
                sendGistUpdate(targetBee)
                print("‚úÖ Bee sent to Gist by Searcher "..ACCOUNT_NUMBER)
            end
            
            -- –•–æ–ø–∏–º –¥–∞–ª—å—à–µ
            wait(2)
            guaranteedHop()
            
        else
            -- –û–±—ã—á–Ω—ã–π —Ö–æ–ø —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º
            if tick() - lastHopTime > HOP_DELAY then
                local selectedServerId = getServerForThisAccount()
                
                if selectedServerId and not visitedServers[selectedServerId] then
                    statusLabel.Text = "üîÑ Searcher "..ACCOUNT_NUMBER.."\nDistributed Hop\nJoining: "..selectedServerId:sub(1, 8).."\nTime: "..os.date("%X")
                    joinServer(selectedServerId)
                else
                    guaranteedHop()
                end
            else
                statusLabel.Text = "‚è≥ Searcher "..ACCOUNT_NUMBER.."\nSearch Cooldown\nCurrent: "..currentServerId:sub(1, 8).."\nTime: "..os.date("%X")
            end
        end
    end
    wait(3)
end
